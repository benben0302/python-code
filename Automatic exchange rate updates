import requests
from bs4 import BeautifulSoup
import json
import os
import openpyxl
from openpyxl import load_workbook
import pandas as pd

#date determine
import time
import datetime

#simple way
wb = load_workbook('currency.xlsx')
ws = wb['usd']

#scraping
url="http://rate.bot.com.tw/xrt/quote/l6m/"
res=requests.get(url)
content=res.text
soup = BeautifulSoup(content,'lxml')
dataset=[]
row = []
j=0
for k in soup.findAll("td"):
    row.append(k.get_text())
    j = j+1
    if j > 5:
        dataset.append(row)
        row = []
        j = 0
dataset.reverse()

pd.DataFrame(dataset)#pd frame
# renew
if datetime.datetime.now()>datetime.datetime.strptime(ws[ws.max_row][0].value, "%Y/%m/%d"):
        for i in range(0,len(dataset)):
            if datetime.datetime.strptime(dataset[i][0], "%Y/%m/%d")> datetime.datetime.strptime(ws[ws.max_row][0].value, "%Y/%m/%d"):
                for j in range(0,6):
                    ws.cell(row=i+1,column=j+1).value=dataset[i][j]
                    wb.save(filename ="currency.xlsx")
--------------------------------------------------------------------------------------------------------------------------------------
#import functions as above


#import currency codes
wb = load_workbook('exchange.xlsx')
ws = wb['currency']
#import codes for files reconizing
curr = []
for i in range(1,ws.max_row+1):
    curr.append(ws[i][0].value)#currencyname
for i in range(0,len(curr)):
    a = 'E'+curr[i]+'.xlsx'#match files
    wb =load_workbook(a)
    ws = wb['Sheet1']
    #Scraping
    url="http://rate.bot.com.tw/xrt/quote/l6m/"+curr[i]
    res=requests.get(url)
    content=res.text
    soup = BeautifulSoup(content,'lxml')
    dataset=[]
    row = []
    j=0
    for k in soup.findAll("td"):
        row.append(k.get_text())
        j = j+1
        if j > 5:
            dataset.append(row)
            row = []
            j = 0
    dataset.reverse()
    #date determine
    pd.DataFrame(dataset)
    wb = load_workbook(a)
    ws = wb['Sheet1']
    # renew
    if datetime.datetime.now()>datetime.datetime.strptime(ws[ws.max_row][0].value, "%Y/%m/%d"):
        for i in range(0,len(dataset)):
            if datetime.datetime.strptime(dataset[i][0], "%Y/%m/%d")> datetime.datetime.strptime(ws[ws.max_row][0].value, "%Y/%m/%d"):
                for j in range(0,6):
                    ws.cell(row=i+2,column=j+1).value=dataset[i][j]
                    wb.save(filename = a)
#print('completion')
#date judgement method ("%Y/%m/%d or others) can refer to https://www.ibm.com/support/knowledgecenter/en/SSEPCD_9.5.0/com.ibm.ondemand.mp.doc/arsa0257.htm
